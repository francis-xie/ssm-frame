<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion> <!--声明项目描述符遵循哪一个POM模型版本 -->

  <groupId>com.emis.vi</groupId> <!--项目的全球唯一标识符，公司或者组织的唯一标志-->
  <artifactId>ssm-frame</artifactId> <!-- 项目的唯一ID，一个groupId下面可能多个项目，就是靠artifactId来区分的 -->
  <version>1.0-SNAPSHOT</version> <!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号 -->
  <packaging>war</packaging> <!--项目产生的构件类型，例如jar、war、pom -->
  <description>ssm-frame project for SSM</description> <!--项目的详细描述, Maven 产生的文档用-->

  <name>ssm-frame</name> <!--项目的名称, Maven产生的文档用 -->
  <url>http://www.example.com</url> <!--项目主页的URL, Maven产生的文档用 -->
  <!--<inceptionYear>2012-2020</inceptionYear>--> <!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。 -->

  <!-- 项目属性 -->
  <properties>
    <!-- default setting -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>

    <!-- main version setting -->
    <spring.version>4.1.9.RELEASE</spring.version>
    <validator.version>5.2.4.Final</validator.version>
    <mybatis.version>3.2.8</mybatis.version>
    <mybatis-spring.version>1.2.3</mybatis-spring.version>
    <druid.version>1.0.18</druid.version>
    <ehcache.version>2.6.11</ehcache.version>
    <ehcache-web.version>2.0.4</ehcache-web.version>
    <shiro.version>1.2.6</shiro.version>
    <sitemesh.version>2.4.2</sitemesh.version>
    <activiti.version>5.21.0</activiti.version>

    <!-- tools version setting -->
    <slf4j.version>1.7.7</slf4j.version>
    <commons-lang3.version>3.3.2</commons-lang3.version>
    <commons-io.version>2.4</commons-io.version>
    <commons-codec.version>1.9</commons-codec.version>
    <commons-fileupload.version>1.3.1</commons-fileupload.version>
    <commons-beanutils.version>1.9.1</commons-beanutils.version>
    <jackson.version>2.2.3</jackson.version>
    <fastjson.version>1.1.40</fastjson.version>
    <xstream.version>1.4.7</xstream.version>
    <guava.version>17.0</guava.version>
    <dozer.version>5.5.1</dozer.version>
    <poi.version>3.9</poi.version>
    <freemarker.version>2.3.20</freemarker.version>

    <!-- jdbc driver setting -->
    <mysql.driver.version>5.1.30</mysql.driver.version>
    <oracle.driver.version>10.2.0.4.0</oracle.driver.version>
    <mssql.driver.version>1.3.1</mssql.driver.version>

    <!-- other setting -->
    <pagehelper.version>5.1.2-beta</pagehelper.version>
    <junit.version>4.12</junit.version>
    <jstl.version>1.2</jstl.version>
    <jsqlparser.version>1.0</jsqlparser.version>
    <servlet-api.version>3.1.0</servlet-api.version>
    <log4j.version>1.2.16</log4j.version>
    <commons-logging.version>1.2</commons-logging.version>
    <commons-lang.version>2.6</commons-lang.version>
    <aopalliance.version>1.0</aopalliance.version>
    <mybatis-generator.version>1.3.5</mybatis-generator.version>

    <!-- environment setting -->
    <jdk.version>1.7</jdk.version>
    <tomcat.version>2.2</tomcat.version>
    <webserver.port>8181</webserver.port>
  </properties>

  <!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。-->
  <dependencies>
    <!-- SPRING begin -->
    <dependency>
      <groupId>org.springframework</groupId> <!--依赖的group ID -->
      <artifactId>spring-core</artifactId> <!--依赖的artifact ID -->
      <version>${spring.version}</version> <!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。 -->
      <!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。
          即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题 -->
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- spring orm -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- bean validate -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${validator.version}</version>
    </dependency>

    <!--other-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!-- SPRING end -->

    <!-- AOP begin -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
      <version>1.7.4</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.7.4</version>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>3.1</version>
    </dependency>
    <!-- AOP end -->

    <!-- PERSISTENCE begin -->

    <!-- MyBatis -->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>${mybatis-spring.version}</version>
    </dependency>

    <!-- connection pool -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>

    <!-- jdbc driver -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.driver.version}</version>
      <!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。
          - compile ：默认范围，用于编译 - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath
          - runtime: 在执行时需要使用 - test: 用于test任务时使用 - system: 需要外在提供相应的元素。通过systemPath来取得
          - systemPath: 仅用于范围为system。提供相应的路径 - optional: 当项目自身被依赖时，标注依赖是否传递。
          用于连续依赖时使用 -->
      <scope>runtime</scope>
      <!--仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。
          该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如${java.home}。 -->
      <!--<systemPath></systemPath>-->
    </dependency>
    <dependency>
      <groupId>net.sourceforge.jtds</groupId>
      <artifactId>jtds</artifactId>
      <version>${mssql.driver.version}</version>
      <scope>runtime</scope>
    </dependency>
    <!-- PERSISTENCE end -->

    <!-- WEB begin -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>opensymphony</groupId>
      <artifactId>sitemesh</artifactId>
      <version>${sitemesh.version}</version>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
      <!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。
           一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应，
           尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。
           如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。 -->
      <type>jar</type>
    </dependency>
    <!-- JSP相关 -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.2</version>
      <scope>provided</scope>
    </dependency> -->
    <!-- WEB end -->

    <!-- CACHE begin -->
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-core</artifactId>
      <version>${ehcache.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-web</artifactId>
      <version>${ehcache-web.version}</version>
    </dependency>
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>2.5.1</version>
    </dependency>
    <!-- CACHE end -->

    <!-- SECURITY begin -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-cas</artifactId>
      <version>${shiro.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-web</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-ehcache</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <!-- SECURITY end -->

    <!-- Activiti -->
    <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-engine</artifactId>
      <version>${activiti.version}</version>
    </dependency>
    <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-spring</artifactId>
      <version>${activiti.version}</version>
    </dependency>
    <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-explorer</artifactId>
      <version>${activiti.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>vaadin</artifactId>
          <groupId>com.vaadin</groupId>
        </exclusion>
        <exclusion>
          <artifactId>dcharts-widget</artifactId>
          <groupId>org.vaadin.addons</groupId>
        </exclusion>
        <exclusion>
          <artifactId>activiti-simple-workflow</artifactId>
          <groupId>org.activiti</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-modeler</artifactId>
      <version>${activiti.version}</version>
    </dependency>
    <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-diagram-rest</artifactId>
      <version>${activiti.version}</version>
    </dependency>

    <!-- 支持activiti缓存 -->
    <!-- <dependency>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-core</artifactId>
      <version>5.1.7.Final</version>
    </dependency> -->

    <!-- LOGGING begin -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <!-- common-logging 实际调用slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <!-- java.util.logging 实际调用slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <!-- LOGGING end -->

    <!-- GENERAL UTILS begin -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons-fileupload.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>${commons-beanutils.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- google java lib -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <!-- jackson json -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- fastjson json
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency> -->

    <!-- xstream xml -->
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>${xstream.version}</version>
    </dependency>

    <!-- pojo copy -->
    <dependency>
      <groupId>net.sf.dozer</groupId>
      <artifactId>dozer</artifactId>
      <version>${dozer.version}</version>
    </dependency>

    <!-- freemarker engine -->
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>${freemarker.version}</version>
    </dependency>

    <!-- email -->
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4.7</version>
    </dependency>
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>1.1.1</version>
    </dependency>

    <!-- poi office -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>${poi.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>${poi.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml-schemas</artifactId>
      <version>${poi.version}</version>
    </dependency>

    <!-- image util -->
    <dependency>
      <groupId>com.drewnoakes</groupId>
      <artifactId>metadata-extractor</artifactId>
      <version>2.6.2</version>
    </dependency>

    <!-- 条形码、二维码生成  -->
    <dependency>
      <groupId>com.google.zxing</groupId>
      <artifactId>core</artifactId>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>com.google.zxing</groupId>
      <artifactId>javase</artifactId>
      <version>2.2</version>
    </dependency>

    <!-- TEST begin -->
    <!--default-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!-- TEST end -->

    <!-- pageHelper -->
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>${pagehelper.version}</version>
    </dependency>
    <!--jsqlparser-->
    <dependency>
      <groupId>com.github.jsqlparser</groupId>
      <artifactId>jsqlparser</artifactId>
      <version>${jsqlparser.version}</version>
    </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <version>${aopalliance.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis.generator</groupId>
      <artifactId>mybatis-generator-core</artifactId>
      <version>${mybatis-generator.version}</version>
    </dependency>
  </dependencies>

  <!--构建项目需要的信息 -->
  <build>
    <!--被编译过的应用程序class文件存放的目录。 -->
    <outputDirectory>${project.basedir}/src/main/webapp/WEB-INF/classes/</outputDirectory>
    <!--产生的构件的文件名，默认值是${artifactId}-${version}。 -->
    <finalName>${project.artifactId}</finalName> <!--<finalName>ssm-frame</finalName>-->
    <!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。
        给定插件的任何本地配置都会覆盖这里的配置 -->
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <!--使用的插件列表 。 -->
      <plugins>
        <!--plugin元素包含描述插件所需要的信息。 -->
        <!-- 配置Tomcat插件 -->
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <!--使用的插件列表 -->
    <plugins>
      <!-- Compiler 插件, 设定JDK版本 -->
      <plugin> <!--plugin元素包含描述插件所需要的信息。 -->
        <groupId>org.apache.maven.plugins</groupId> <!--插件在仓库里的group ID -->
        <artifactId>maven-compiler-plugin</artifactId> <!--插件在仓库里的artifact ID -->
        <version>3.5.1</version> <!--被使用的插件的版本（或版本范围） -->
        <configuration> <!--作为DOM对象的配置 -->
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>

      <!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <!--<configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>-->
        <!-- <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classesDirectory>${project.outputDirectory}</classesDirectory>
              <finalName>jeesite</finalName>
              <outputDirectory>${project.build.directory}/${project.artifactId}/WEB-INF/lib</outputDirectory>
              <includes>
                    <include>com/thinkgem/jeesite/**</include>
                   </includes>
            </configuration>
          </execution>
        </executions> -->
      </plugin>

      <!-- war 打包插件, 设定war包名称不带版本号 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <packagingExcludes>
            <!-- WEB-INF/classes/com/thinkgem/jeesite/** -->
            WEB-INF/classes/org/apache/ibatis/**,
            WEB-INF/classes/org/mybatis/spring/**
          </packagingExcludes>
          <warSourceExcludes>
            static/bootstrap/2.3.1/docs/**,
            static/ckeditor/_samples/**,
            static/ckeditor/_source/**,
            static/ckfinder/_samples/**,
            static/ckfinder/help/**,
            static/compressor*/**,
            static/jquery-jbox/2.3/docs/**,
            static/jquery-jbox/2.3/Skins2/**,
            static/jquery-validation/1.11.0/demo/**,
            static/jquery-ztree/3.5.12/demo/**,
            static/My97DatePicker/docs/**,
            static/supcan/doc/**,
            static/SuperSlide/demo/**,
            static/treeTable/demo/**<!-- , -->
            <!-- userfiles/** --><!-- ,/**/*.jsp -->,
            test/**
          </warSourceExcludes>
          <webappDirectory>${project.build.directory}/${project.artifactId}</webappDirectory><!--
					<webXml>${project.basedir}/target/jspweb.xml</webXml> -->
          <warName>${project.artifactId}</warName>
        </configuration>
      </plugin>

      <!-- tomcat7插件 -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>${tomcat.version}</version>
        <configuration>
          <port>${webserver.port}</port>
          <path>/${project.artifactId}</path>
          <uriEncoding>${project.build.sourceEncoding}</uriEncoding>
        </configuration>
      </plugin>

      <!-- resource资源文件拷贝插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <!-- install插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.5.2</version>
      </plugin>

      <!-- clean插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.6.1</version>
      </plugin>

      <!-- ant插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
      </plugin>

      <!-- dependency插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
      </plugin>

      <!-- java编译插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
    </plugins>

    <!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。 -->
    <resources>
      <!--这个元素描述了项目相关或测试相关的所有资源路径 -->
      <resource>
        <!--描述存放资源的目录，该路径相对POM路径 -->
        <directory>src/main/resources</directory>
        <includes> <!--包含的模式列表，例如**/*.xml. -->
          <include>**/*.properties</include>
          <include>**/*.xml</include>
          <include>**/*.tld</include>
        </includes>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.xml</include>
        </includes>
        <!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。 -->
        <filtering>false</filtering>
      </resource>
    </resources>
  </build>

  <!-- 项目开发者列表 -->
  <developers>
    <!--某个项目开发者的信息 -->
    <developer>
      <!--SCM里项目开发者的唯一标识符 -->
      <id>francis</id>
      <!--项目开发者的全名 -->
      <name>xie</name>
      <!--项目开发者的email -->
      <email>francis at 163.com</email>
      <!--项目开发者的主页的URL -->
      <url/>
      <!--项目开发者在项目中扮演的角色，角色元素描述了各种角色 -->
      <roles>
        <role>Project lead</role>
      </roles>
      <!--项目开发者所在时区， -11到12范围内的整数。 -->
      <timezone>+8</timezone>
    </developer>
  </developers>
</project>
